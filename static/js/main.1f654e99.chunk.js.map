{"version":3,"sources":["helpers/api.ts","components/Todo.tsx","components/TodoList.tsx","components/Button.tsx","App.tsx","index.tsx"],"names":["getDataFromServer","url","a","fetch","response","json","getTodosData","Promise","all","data","Todo","id","title","user","completed","className","key","name","TodoList","todos","map","todo","Button","filterButtons","func","type","toString","onClick","App","useState","setTodos","isLoading","setLoading","reverseValue","setReverseValue","init","tasks","users","newTodos","task","find","userId","changeReverseValue","index","prev","el","ind","FILTER_BUTTONS","e","Number","target","sort","b","localeCompare","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f654e99.chunk.js","sourcesContent":["const TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\nconst getDataFromServer = async (url: string) => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n\nexport const getTodosData = async (): Promise<[Todo[], User[]]> => {\n  const data = await Promise.all([\n    getDataFromServer(TODOS_URL),\n    getDataFromServer(USERS_URL),\n  ]);\n\n  return data;\n};\n","import React from 'react';\n\n\nexport const Todo: React.FC<Todo> = ({\n  id, title, user, completed,\n}) => (\n  <li className=\"todo\" key={id}>\n    <span>{id}</span>\n    <span>{user.name}</span>\n    <span>{title}</span>\n    {completed\n      ? (<i className=\"material-icons green-text\">check_circle</i>)\n      : (<i className=\"material-icons orange-text\">lens</i>)}\n  </li>\n);\n","import React from 'react';\nimport { Todo } from './Todo';\n\ntype TodoListProps = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => (\n  <ul>\n    {todos.map(todo => (\n      <Todo\n        {...todo}\n        key={todo.title}\n      />\n    ))}\n  </ul>\n);\n","import React from 'react';\n\ntype Props = {\n  filterButtons: FilterButton[];\n};\n\nexport const Button: React.FC<Props> = ({ filterButtons }) => {\n  return (\n    <div className=\"buttons_panel\">\n      {filterButtons.map(({ id, title, func }) => (\n        <button\n          type=\"button\"\n          key={id}\n          id={id.toString()}\n          onClick={func}\n        >\n          {title}\n        </button>\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getTodosData } from './helpers/api';\nimport { TodoList } from './components/TodoList';\nimport { Button } from './components/Button';\n\nconst App = () => {\n  const reverseArray: number[] = [1, 1, 1, 1];\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [reverseValue, setReverseValue] = useState<number[]>(reverseArray);\n\n  const init = async () => {\n    setLoading(true);\n    const [tasks, users] = await getTodosData();\n    const newTodos = tasks.map(task => ({\n      ...task,\n      user: users.find(user => user.id === task.userId),\n    }));\n\n    setTodos(newTodos);\n    setLoading(false);\n  };\n\n  const changeReverseValue = (index: number): void => {\n    setReverseValue(prev => prev.map((el, ind) => (ind === index ? el * (-1) : el)));\n  };\n\n  const sortById = (e: React.MouseEvent) => {\n    const index = Number((e.target as Element).id) - 1;\n\n    changeReverseValue(index);\n    setTodos(prev => [...prev]\n      .sort((a, b) => (a.id - b.id) * reverseValue[index]));\n  };\n\n  const sortByName = (e: React.MouseEvent) => {\n    const index = Number((e.target as Element).id) - 1;\n\n    changeReverseValue(index);\n    setTodos(prev => [...prev]\n      .sort((a, b) => (a.user.name.localeCompare(b.user.name)) * reverseValue[index]));\n  };\n\n  const sortByTitle = (e: React.MouseEvent) => {\n    const index = Number((e.target as Element).id) - 1;\n\n    changeReverseValue(index);\n    setTodos(prev => [...prev]\n      .sort((a, b) => (a.title.localeCompare(b.title)) * reverseValue[index]));\n  };\n\n  const sortByCompleted = (e: React.MouseEvent) => {\n    const index = Number((e.target as Element).id) - 1;\n\n    changeReverseValue(index);\n    setTodos(prev => [...prev]\n      .sort((a, b) => (Number(a.completed) - Number(b.completed)) * reverseValue[index]));\n  };\n\n  const FILTER_BUTTONS: FilterButton[] = [\n    { id: 1, title: 'Id', func: sortById },\n    { id: 2, title: 'Name', func: sortByName },\n    { id: 3, title: 'Title', func: sortByTitle },\n    { id: 4, title: 'Completed', func: sortByCompleted },\n  ];\n\n  return (\n    <>\n      <h1>Dynamic list of TODOs</h1>\n      {todos.length ? (\n        <div>\n          <Button filterButtons={FILTER_BUTTONS} />\n          <TodoList todos={todos} />\n        </div>\n      ) : (\n        <button\n          type=\"button\"\n          onClick={() => init()}\n        >\n          {isLoading ? 'Loading...' : 'Load'}\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}